{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/api'; // Вкажіть URL вашого сервера\n\nexport const getProducts = (filters = {}) => {\n  const params = new URLSearchParams(filters).toString();\n  return axios.get(`${API_URL}/hotels?${params}`);\n};\nexport const getFilteredHotels = async filters => {\n  try {\n    const response = await axios.get('http://localhost:3000/api', {\n      params: filters // Передаємо об'єкт фільтрів у params\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Помилка завантаження готелів:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","API_URL","getProducts","filters","params","URLSearchParams","toString","get","getFilteredHotels","response","data","error","console"],"sources":["/Users/voloda/Documents/GitHub/web-programming/front-end/src/api/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:3000/api'; // Вкажіть URL вашого сервера\n\nexport const getProducts = (filters = {}) => {\n  const params = new URLSearchParams(filters).toString();\n  return axios.get(`${API_URL}/hotels?${params}`);\n};\n\nexport const getFilteredHotels = async (filters) => {\n  try {\n    const response = await axios.get('http://localhost:3000/api', {\n      params: filters, // Передаємо об'єкт фільтрів у params\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Помилка завантаження готелів:\", error);\n    return [];\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C,OAAO,MAAMC,WAAW,GAAGA,CAACC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC3C,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAACF,OAAO,CAAC,CAACG,QAAQ,CAAC,CAAC;EACtD,OAAON,KAAK,CAACO,GAAG,CAAC,GAAGN,OAAO,WAAWG,MAAM,EAAE,CAAC;AACjD,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAG,MAAOL,OAAO,IAAK;EAClD,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMT,KAAK,CAACO,GAAG,CAAC,2BAA2B,EAAE;MAC5DH,MAAM,EAAED,OAAO,CAAE;IACnB,CAAC,CAAC;IACF,OAAOM,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
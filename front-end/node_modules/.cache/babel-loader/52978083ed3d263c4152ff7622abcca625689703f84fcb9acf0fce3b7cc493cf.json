{"ast":null,"code":"var _jsxFileName = \"/Users/voloda/Documents/GitHub/web-programming/front-end/src/components/HotelsList/HotelsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport HotelCard from './HotelCard/HotelCard';\nimport Filters from '../Filters/Filters';\nimport Loader from '../Loader/Loader'; // Імпортуємо компонент Loader\nimport { getProducts } from '../../api/axiosConfig';\nimport './HotelList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HotelsList() {\n  _s();\n  const [hotels, setHotels] = useState([]); // Початкові дані (всі готелі)\n  const [filteredHotels, setFilteredHotels] = useState([]); // Відфільтровані дані\n  const [filters, setFilters] = useState({\n    price: '',\n    visitors: '',\n    rooms: ''\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Завантаження всіх готелів при першому рендері\n  useEffect(() => {\n    const fetchHotels = async () => {\n      setLoading(true); // Початок завантаження\n      try {\n        const response = await getProducts(); // Виконання запиту до API\n\n        // Затримка на 2 секунди перед встановленням даних\n        setTimeout(() => {\n          setHotels(response.data);\n          setFilteredHotels(response.data); // Ініціалізація фільтрованих даних\n          setLoading(false); // Завершення завантаження після затримки\n        }, 2000); // Затримка 2 секунди\n      } catch (error) {\n        setError(error.message); // Збереження повідомлення про помилку\n        setLoading(false); // Завершення завантаження навіть у разі помилки\n      }\n    };\n    fetchHotels(); // Виклик функції для отримання даних при першому рендері\n  }, []);\n\n  // Застосування фільтрів при зміні значень у `filters`\n  useEffect(() => {\n    const applyFilters = () => {\n      if (!filters.price && !filters.visitors && !filters.rooms) {\n        setFilteredHotels(hotels); // Повертаємо всі готелі, якщо фільтри порожні\n      } else {\n        const filtered = hotels.filter(hotel => {\n          const priceMatch = filters.price ? hotel.price <= Number(filters.price) : true;\n          const visitorsMatch = filters.visitors ? hotel.visitors <= Number(filters.visitors) : true;\n          const roomsMatch = filters.rooms ? hotel.rooms <= Number(filters.rooms) : true;\n          return priceMatch && visitorsMatch && roomsMatch;\n        });\n        setFilteredHotels(filtered);\n      }\n    };\n    applyFilters();\n  }, [filters, hotels]);\n\n  // Функція обробки змін у фільтрах\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filters, {\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this) // Використовуємо компонент Loader\n    : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this) // Відображення помилки, якщо вона є\n    : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hotels-list\",\n      children: filteredHotels.length > 0 ? filteredHotels.map(hotel => /*#__PURE__*/_jsxDEV(HotelCard, {\n        name: hotel.name,\n        image: hotel.image,\n        description: hotel.description\n      }, hotel.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0413\\u043E\\u0442\\u0435\\u043B\\u044C \\u043D\\u0435 \\u0437\\u043D\\u0430\\u0439\\u0434\\u0435\\u0456\\u0456\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(HotelsList, \"/zYDb6pGdguUEhzS3IruR4Gf0C4=\");\n_c = HotelsList;\nexport default HotelsList;\nvar _c;\n$RefreshReg$(_c, \"HotelsList\");","map":{"version":3,"names":["React","useState","useEffect","HotelCard","Filters","Loader","getProducts","jsxDEV","_jsxDEV","HotelsList","_s","hotels","setHotels","filteredHotels","setFilteredHotels","filters","setFilters","price","visitors","rooms","loading","setLoading","error","setError","fetchHotels","response","setTimeout","data","message","applyFilters","filtered","filter","hotel","priceMatch","Number","visitorsMatch","roomsMatch","handleFilterChange","newFilters","children","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","name","image","description","id","_c","$RefreshReg$"],"sources":["/Users/voloda/Documents/GitHub/web-programming/front-end/src/components/HotelsList/HotelsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport HotelCard from './HotelCard/HotelCard';\nimport Filters from '../Filters/Filters';\nimport Loader from '../Loader/Loader'; // Імпортуємо компонент Loader\nimport { getProducts } from '../../api/axiosConfig';\nimport './HotelList.css'\n\nfunction HotelsList() {\n    const [hotels, setHotels] = useState([]); // Початкові дані (всі готелі)\n    const [filteredHotels, setFilteredHotels] = useState([]); // Відфільтровані дані\n    const [filters, setFilters] = useState({ price: '', visitors: '', rooms: '' });\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // Завантаження всіх готелів при першому рендері\n    useEffect(() => {\n        const fetchHotels = async () => {\n            setLoading(true); // Початок завантаження\n            try {\n                const response = await getProducts(); // Виконання запиту до API\n                \n                // Затримка на 2 секунди перед встановленням даних\n                setTimeout(() => {\n                    setHotels(response.data);\n                    setFilteredHotels(response.data); // Ініціалізація фільтрованих даних\n                    setLoading(false); // Завершення завантаження після затримки\n                }, 2000); // Затримка 2 секунди\n            } catch (error) {\n                setError(error.message); // Збереження повідомлення про помилку\n                setLoading(false); // Завершення завантаження навіть у разі помилки\n            }\n        };\n\n        fetchHotels(); // Виклик функції для отримання даних при першому рендері\n    }, []);\n\n    // Застосування фільтрів при зміні значень у `filters`\n    useEffect(() => {\n        const applyFilters = () => {\n            if (!filters.price && !filters.visitors && !filters.rooms) {\n                setFilteredHotels(hotels); // Повертаємо всі готелі, якщо фільтри порожні\n            } else {\n                const filtered = hotels.filter((hotel) => {\n                    const priceMatch = filters.price ? hotel.price <= Number(filters.price) : true;\n                    const visitorsMatch = filters.visitors ? hotel.visitors <= Number(filters.visitors) : true;\n                    const roomsMatch = filters.rooms ? hotel.rooms <= Number(filters.rooms) : true;\n                    return priceMatch && visitorsMatch && roomsMatch;\n                });\n                setFilteredHotels(filtered);\n            }\n        };\n\n        applyFilters();\n    }, [filters, hotels]);\n\n    // Функція обробки змін у фільтрах\n    const handleFilterChange = (newFilters) => {\n        setFilters(newFilters);\n    };\n\n    return (\n        <div>\n            <Filters onFilterChange={handleFilterChange} />\n            {loading ? (\n                <Loader /> // Використовуємо компонент Loader\n            ) : error ? (\n                <div>Error: {error}</div> // Відображення помилки, якщо вона є\n            ) : (\n                <div className=\"hotels-list\">\n                    {filteredHotels.length > 0 ? (\n                        filteredHotels.map((hotel) => (\n                            <HotelCard\n                                key={hotel.id}\n                                name={hotel.name}\n                                image={hotel.image}\n                                description={hotel.description}\n                            />\n                        ))\n                    ) : (\n                        <div>Готель не знайдеііно</div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default HotelsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/api';\n\n// Створення екземпляра axios\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Додавання токена до заголовків\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Функції API\n\n// Реєстрація користувача\nexport const registerUser = async (email, password) => {\n  try {\n    const response = await api.post('/auth/register', {\n      email,\n      password\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Помилка реєстрації користувача:', error);\n    throw error;\n  }\n};\n\n// Вхід користувача\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    const {\n      token\n    } = response.data;\n    localStorage.setItem('token', token); // Зберігаємо токен в localStorage\n    return response.data;\n  } catch (error) {\n    console.error('Помилка входу користувача:', error);\n    throw error;\n  }\n};\nexport const getProducts = (filters = {}) => {\n  const params = new URLSearchParams(filters).toString();\n  return api.get(`/hotels?${params}`);\n};\nexport const getFilteredHotels = async filters => {\n  try {\n    const queryString = new URLSearchParams(filters).toString();\n    const response = await api.get(`/hotels?${queryString}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Помилка завантаження готелів:\", error);\n    return [];\n  }\n};\nexport const addToCartToServer = async ({\n  userId,\n  hotelId,\n  quantity,\n  nights,\n  price\n}) => {\n  try {\n    const response = await api.post(`/cart`, {\n      userId,\n      hotelId,\n      quantity,\n      nights,\n      price\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Помилка додавання товару до кошика на сервері:', error);\n    throw error;\n  }\n};\nexport const getCart = async userId => {\n  try {\n    const response = await api.get(`/cart/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Помилка отримання кошика:\", error);\n    return [];\n  }\n};\nexport const updateCart = async (itemId, updatedData) => {\n  return await api.put(`/cart/${itemId}`, updatedData);\n};\nexport const removeFromCart = async itemId => {\n  return await api.delete(`/cart/${itemId}`);\n};\nexport const getHotelDetails = async id => {\n  try {\n    const response = await api.get(`/hotels/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Помилка завантаження деталей готелю:', error);\n    throw error;\n  }\n};\nexport const updateCartItemDetails = async (itemId, nights, people) => {\n  try {\n    const response = await api.put(`/cart/${itemId}`, {\n      nights,\n      people\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Помилка оновлення ночей та людей для товару в кошику:', error);\n    throw error;\n  }\n};\nexport const getHotelById = async id => {\n  try {\n    const response = await api.get(`/hotels/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Помилка завантаження готелю:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","registerUser","email","password","response","post","data","console","loginUser","setItem","getProducts","filters","params","URLSearchParams","toString","get","getFilteredHotels","queryString","addToCartToServer","userId","hotelId","quantity","nights","price","getCart","updateCart","itemId","updatedData","put","removeFromCart","delete","getHotelDetails","id","updateCartItemDetails","people","getHotelById"],"sources":["/Users/voloda/Documents/GitHub/web-programming/front-end/src/api/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:3000/api'; \n\n// Створення екземпляра axios\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Додавання токена до заголовків\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n});\n\n// Функції API\n\n// Реєстрація користувача\nexport const registerUser = async (email, password) => {\n  try {\n    const response = await api.post('/auth/register', { email, password });\n    return response.data;\n  } catch (error) {\n    console.error('Помилка реєстрації користувача:', error);\n    throw error;\n  }\n};\n\n// Вхід користувача\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await api.post('/auth/login', { email, password });\n    const { token } = response.data;\n    localStorage.setItem('token', token); // Зберігаємо токен в localStorage\n    return response.data;\n  } catch (error) {\n    console.error('Помилка входу користувача:', error);\n    throw error;\n  }\n};\n\nexport const getProducts = (filters = {}) => {\n  const params = new URLSearchParams(filters).toString();\n  return api.get(`/hotels?${params}`);\n};\n\nexport const getFilteredHotels = async (filters) => {\n  try {\n    const queryString = new URLSearchParams(filters).toString();\n    const response = await api.get(`/hotels?${queryString}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Помилка завантаження готелів:\", error);\n    return [];\n  }\n};\n\nexport const addToCartToServer = async ({ userId, hotelId, quantity, nights, price }) => {\n  try {\n      const response = await api.post(`/cart`, { userId, hotelId, quantity, nights, price });\n      return response.data;\n  } catch (error) {\n      console.error('Помилка додавання товару до кошика на сервері:', error);\n      throw error;\n  }\n};\n\n\nexport const getCart = async (userId) => {\n  try {\n      const response = await api.get(`/cart/${userId}`);\n      return response.data;\n  } catch (error) {\n      console.error(\"Помилка отримання кошика:\", error);\n      return [];\n  }\n};\n\n\nexport const updateCart = async (itemId, updatedData) => {\n  return await api.put(`/cart/${itemId}`, updatedData);\n};\n\n\nexport const removeFromCart = async (itemId) => {\n  return await api.delete(`/cart/${itemId}`);\n};\n\n\nexport const getHotelDetails = async (id) => {\n  try {\n      const response = await api.get(`/hotels/${id}`);\n      return response.data;\n  } catch (error) {\n      console.error('Помилка завантаження деталей готелю:', error);\n      throw error;\n  }\n};\n\nexport const updateCartItemDetails = async (itemId, nights, people) => {\n  try {\n      const response = await api.put(`/cart/${itemId}`, { nights, people });\n      return response.data;\n  } catch (error) {\n      console.error('Помилка оновлення ночей та людей для товару в кошику:', error);\n      throw error;\n  }\n};\n\nexport const getHotelById = async (id) => {\n  try {\n      const response = await api.get(`/hotels/${id}`);\n      return response.data;\n  } catch (error) {\n      console.error('Помилка завантаження готелю:', error);\n      throw error;\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/voloda/Documents/GitHub/web-programming/front-end/src/components/HotelsList/HotelsList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport HotelCard from './HotelCard/HotelCard';\nimport Filters from '../Filters/Filters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HotelsList() {\n  _s();\n  const [hotels, setHotels] = useState([]); // Початкові дані (всі готелі)\n  const [filteredHotels, setFilteredHotels] = useState([]); // Відфільтровані дані\n  const [filters, setFilters] = useState({\n    price: '',\n    visitors: '',\n    rooms: ''\n  });\n  const [loading, setLoading] = useState(true);\n\n  // Завантаження всіх готелів при першому рендері\n  useEffect(() => {\n    const fetchHotels = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:3000/api/hotels');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setHotels(data); // Зберігаємо всі готелі\n        setFilteredHotels(data); // Встановлюємо їх як початкові відфільтровані дані\n      } catch (error) {\n        console.error('Error fetching hotels:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHotels();\n  }, []);\n\n  // Застосування фільтрів при зміні значень у `filters`\n  useEffect(() => {\n    if (!filters.price && !filters.visitors && !filters.rooms) {\n      // Якщо фільтри порожні, повертаємо всі готелі\n      setFilteredHotels(hotels);\n    } else {\n      // Застосовуємо фільтри до готелів\n      const filtered = hotels.filter(hotel => {\n        const priceMatch = filters.price ? hotel.price <= Number(filters.price) : true;\n        const visitorsMatch = filters.visitors ? hotel.visitors <= Number(filters.visitors) : true;\n        const roomsMatch = filters.rooms ? hotel.rooms <= Number(filters.rooms) : true;\n        return priceMatch && visitorsMatch && roomsMatch;\n      });\n      setFilteredHotels(filtered);\n    }\n  }, [filters, hotels]);\n\n  // Функція обробки змін у фільтрах\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filters, {\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hotels-list\",\n      children: filteredHotels.length > 0 ? filteredHotels.map(hotel => /*#__PURE__*/_jsxDEV(HotelCard, {\n        name: hotel.name,\n        image: hotel.image,\n        description: hotel.description\n      }, hotel.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u0413\\u043E\\u0442\\u0435\\u043B\\u044C \\u043D\\u0435 \\u0437\\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(HotelsList, \"GJgaKWwd5bnAod6jqz5lPdPFgNI=\");\n_c = HotelsList;\nexport default HotelsList;\nvar _c;\n$RefreshReg$(_c, \"HotelsList\");","map":{"version":3,"names":["React","useState","useEffect","HotelCard","Filters","jsxDEV","_jsxDEV","HotelsList","_s","hotels","setHotels","filteredHotels","setFilteredHotels","filters","setFilters","price","visitors","rooms","loading","setLoading","fetchHotels","response","fetch","ok","Error","data","json","error","console","filtered","filter","hotel","priceMatch","Number","visitorsMatch","roomsMatch","handleFilterChange","newFilters","children","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","name","image","description","id","_c","$RefreshReg$"],"sources":["/Users/voloda/Documents/GitHub/web-programming/front-end/src/components/HotelsList/HotelsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport HotelCard from './HotelCard/HotelCard';\nimport Filters from '../Filters/Filters';\n\nfunction HotelsList() {\n    const [hotels, setHotels] = useState([]);          // Початкові дані (всі готелі)\n    const [filteredHotels, setFilteredHotels] = useState([]); // Відфільтровані дані\n    const [filters, setFilters] = useState({ price: '', visitors: '', rooms: '' });\n    const [loading, setLoading] = useState(true);\n\n    // Завантаження всіх готелів при першому рендері\n    useEffect(() => {\n        const fetchHotels = async () => {\n            setLoading(true);\n            try {\n                const response = await fetch('http://localhost:3000/api/hotels');\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                setHotels(data);           // Зберігаємо всі готелі\n                setFilteredHotels(data);    // Встановлюємо їх як початкові відфільтровані дані\n            } catch (error) {\n                console.error('Error fetching hotels:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchHotels();\n    }, []);\n\n    // Застосування фільтрів при зміні значень у `filters`\n    useEffect(() => {\n        if (!filters.price && !filters.visitors && !filters.rooms) {\n            // Якщо фільтри порожні, повертаємо всі готелі\n            setFilteredHotels(hotels);\n        } else {\n            // Застосовуємо фільтри до готелів\n            const filtered = hotels.filter((hotel) => {\n                const priceMatch = filters.price ? hotel.price <= Number(filters.price) : true;\n                const visitorsMatch = filters.visitors ? hotel.visitors <= Number(filters.visitors) : true;\n                const roomsMatch = filters.rooms ? hotel.rooms <= Number(filters.rooms) : true;\n                return priceMatch && visitorsMatch && roomsMatch;\n            });\n            setFilteredHotels(filtered);\n        }\n    }, [filters, hotels]);\n\n    // Функція обробки змін у фільтрах\n    const handleFilterChange = (newFilters) => {\n        setFilters(newFilters);\n    };\n\n    return (\n        <div>\n            <Filters onFilterChange={handleFilterChange} />\n            {loading ? (\n                <div>Loading...</div>\n            ) : (\n                <div className=\"hotels-list\">\n                    {filteredHotels.length > 0 ? (\n                        filteredHotels.map((hotel) => (\n                            <HotelCard\n                                key={hotel.id}\n                                name={hotel.name}\n                                image={hotel.image}\n                                description={hotel.description}\n                            />\n                        ))\n                    ) : (\n                        <div>Готель не знайдено</div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default HotelsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/api';\n\n// Створення екземпляра axios\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Додавання токена до заголовків\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Функції API\nexport const getProducts = (filters = {}) => {\n  const params = new URLSearchParams(filters).toString();\n  return api.get(`/hotels?${params}`);\n};\nexport const getFilteredHotels = async filters => {\n  try {\n    const queryString = new URLSearchParams(filters).toString();\n    const response = await api.get(`/hotels?${queryString}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Помилка завантаження готелів:\", error);\n    return [];\n  }\n};\nexport const addToCartToServer = async item => {\n  try {\n    const response = await api.post(`/cart`, {\n      item\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Помилка додавання товару до кошика на сервері:', error);\n    throw error;\n  }\n};\nexport const getCart = async () => {\n  try {\n    const response = await api.get(`/cart`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Помилка отримання кошика:\", error);\n    return [];\n  }\n};\nexport const updateCart = async (id, updatedDetails) => {\n  try {\n    const response = await api.put(`/cart/${id}`, updatedDetails);\n    return response.data;\n  } catch (error) {\n    console.error('Помилка оновлення кошика:', error);\n    throw error;\n  }\n};\nexport const removeFromCart = async id => {\n  try {\n    const response = await api.delete(`/cart/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Помилка видалення товару з кошика:', error);\n    throw error;\n  }\n};\nexport const getHotelDetails = async id => {\n  try {\n    const response = await api.get(`/hotels/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Помилка завантаження деталей готелю:', error);\n    throw error;\n  }\n};\nexport const updateCartItemDetails = async (itemId, nights, people) => {\n  try {\n    const response = await api.put(`/cart/${itemId}`, {\n      nights,\n      people\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Помилка оновлення ночей та людей для товару в кошику:', error);\n    throw error;\n  }\n};\nexport const getHotelById = async id => {\n  try {\n    const response = await api.get(`/hotels/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Помилка завантаження готелю:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","getProducts","filters","params","URLSearchParams","toString","get","getFilteredHotels","queryString","response","data","console","addToCartToServer","item","post","getCart","updateCart","id","updatedDetails","put","removeFromCart","delete","getHotelDetails","updateCartItemDetails","itemId","nights","people","getHotelById"],"sources":["/Users/voloda/Documents/GitHub/web-programming/front-end/src/api/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:3000/api'; \n\n// Створення екземпляра axios\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Додавання токена до заголовків\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n});\n\n// Функції API\nexport const getProducts = (filters = {}) => {\n  const params = new URLSearchParams(filters).toString();\n  return api.get(`/hotels?${params}`);\n};\n\nexport const getFilteredHotels = async (filters) => {\n  try {\n    const queryString = new URLSearchParams(filters).toString();\n    const response = await api.get(`/hotels?${queryString}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Помилка завантаження готелів:\", error);\n    return [];\n  }\n};\n\nexport const addToCartToServer = async (item) => {\n  try {\n      const response = await api.post(`/cart`, { item });\n      return response.data;\n  } catch (error) {\n      console.error('Помилка додавання товару до кошика на сервері:', error);\n      throw error;\n  }\n};\n\nexport const getCart = async () => {\n  try {\n      const response = await api.get(`/cart`);\n      return response.data;\n  } catch (error) {\n      console.error(\"Помилка отримання кошика:\", error);\n      return [];\n  }\n};\n\nexport const updateCart = async (id, updatedDetails) => {\n  try {\n      const response = await api.put(`/cart/${id}`, updatedDetails);\n      return response.data;\n  } catch (error) {\n      console.error('Помилка оновлення кошика:', error);\n      throw error;\n  }\n};\n\nexport const removeFromCart = async (id) => {\n  try {\n      const response = await api.delete(`/cart/${id}`);\n      return response.data;\n  } catch (error) {\n      console.error('Помилка видалення товару з кошика:', error);\n      throw error;\n  }\n};\n\nexport const getHotelDetails = async (id) => {\n  try {\n      const response = await api.get(`/hotels/${id}`);\n      return response.data;\n  } catch (error) {\n      console.error('Помилка завантаження деталей готелю:', error);\n      throw error;\n  }\n};\n\nexport const updateCartItemDetails = async (itemId, nights, people) => {\n  try {\n      const response = await api.put(`/cart/${itemId}`, { nights, people });\n      return response.data;\n  } catch (error) {\n      console.error('Помилка оновлення ночей та людей для товару в кошику:', error);\n      throw error;\n  }\n};\n\nexport const getHotelById = async (id) => {\n  try {\n      const response = await api.get(`/hotels/${id}`);\n      return response.data;\n  } catch (error) {\n      console.error('Помилка завантаження готелю:', error);\n      throw error;\n  }\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
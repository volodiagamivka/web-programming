{"ast":null,"code":"var _jsxFileName = \"/Users/voloda/Documents/GitHub/web-programming/front-end/src/components/HotelsList/HotelsList.js\",\n  _s = $RefreshSig$();\n// HotelsList.js (або Grid.js)\nimport React, { useState, useEffect } from 'react';\nimport HotelCard from './HotelCard/HotelCard';\nimport Filters from '../Filters/Filters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HotelsList() {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [filters, setFilters] = useState({\n    price: '',\n    visitors: '',\n    rooms: ''\n  });\n  const [loading, setLoading] = useState(true);\n\n  // Завантаження готелів з фільтрами\n  const fetchHotels = async () => {\n    setLoading(true);\n    const query = new URLSearchParams(filters).toString();\n    try {\n      const response = await fetch(`http://localhost:5000/api/hotels?${query}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setHotels(data);\n    } catch (error) {\n      console.error('Error fetching hotels:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchHotels();\n  }, [filters]); // Викликаємо fetchHotels щоразу, коли змінюються фільтри\n\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filters, {\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hotels-list\",\n      children: hotels.map(hotel => /*#__PURE__*/_jsxDEV(HotelCard, {\n        name: hotel.name,\n        image: hotel.image,\n        description: hotel.description\n      }, hotel.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(HotelsList, \"gbeZfE4DEWczCoh/WAQTSE24TpM=\");\n_c = HotelsList;\nexport default HotelsList;\nvar _c;\n$RefreshReg$(_c, \"HotelsList\");","map":{"version":3,"names":["React","useState","useEffect","HotelCard","Filters","jsxDEV","_jsxDEV","HotelsList","_s","hotels","setHotels","filters","setFilters","price","visitors","rooms","loading","setLoading","fetchHotels","query","URLSearchParams","toString","response","fetch","ok","Error","data","json","error","console","handleFilterChange","newFilters","children","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","className","map","hotel","name","image","description","id","_c","$RefreshReg$"],"sources":["/Users/voloda/Documents/GitHub/web-programming/front-end/src/components/HotelsList/HotelsList.js"],"sourcesContent":["// HotelsList.js (або Grid.js)\nimport React, { useState, useEffect } from 'react';\nimport HotelCard from './HotelCard/HotelCard';\nimport Filters from '../Filters/Filters';\n\nfunction HotelsList() {\n    const [hotels, setHotels] = useState([]);\n    const [filters, setFilters] = useState({ price: '', visitors: '', rooms: '' });\n    const [loading, setLoading] = useState(true);\n\n    // Завантаження готелів з фільтрами\n    const fetchHotels = async () => {\n        setLoading(true);\n        const query = new URLSearchParams(filters).toString();\n        try {\n            const response = await fetch(`http://localhost:5000/api/hotels?${query}`);\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const data = await response.json();\n            setHotels(data);\n        } catch (error) {\n            console.error('Error fetching hotels:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchHotels();\n    }, [filters]); // Викликаємо fetchHotels щоразу, коли змінюються фільтри\n\n    const handleFilterChange = (newFilters) => {\n        setFilters(newFilters);\n    };\n\n    return (\n        <div>\n            <Filters onFilterChange={handleFilterChange} />\n            {loading ? <div>Loading...</div> : (\n                <div className=\"hotels-list\">\n                    {hotels.map((hotel) => (\n                        <HotelCard\n                            key={hotel.id}\n                            name={hotel.name}\n                            image={hotel.image}\n                            description={hotel.description}\n                        />\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default HotelsList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC;IAAEY,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAC9E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5BD,UAAU,CAAC,IAAI,CAAC;IAChB,MAAME,KAAK,GAAG,IAAIC,eAAe,CAACT,OAAO,CAAC,CAACU,QAAQ,CAAC,CAAC;IACrD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoCJ,KAAK,EAAE,CAAC;MACzE,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCjB,SAAS,CAACgB,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD,CAAC,SAAS;MACNX,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZgB,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEf,MAAMmB,kBAAkB,GAAIC,UAAU,IAAK;IACvCnB,UAAU,CAACmB,UAAU,CAAC;EAC1B,CAAC;EAED,oBACIzB,OAAA;IAAA0B,QAAA,gBACI1B,OAAA,CAACF,OAAO;MAAC6B,cAAc,EAAEH;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9CrB,OAAO,gBAAGV,OAAA;MAAA0B,QAAA,EAAK;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAC5B/B,OAAA;MAAKgC,SAAS,EAAC,aAAa;MAAAN,QAAA,EACvBvB,MAAM,CAAC8B,GAAG,CAAEC,KAAK,iBACdlC,OAAA,CAACH,SAAS;QAENsC,IAAI,EAAED,KAAK,CAACC,IAAK;QACjBC,KAAK,EAAEF,KAAK,CAACE,KAAM;QACnBC,WAAW,EAAEH,KAAK,CAACG;MAAY,GAH1BH,KAAK,CAACI,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC7B,EAAA,CAhDQD,UAAU;AAAAsC,EAAA,GAAVtC,UAAU;AAkDnB,eAAeA,UAAU;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/voloda/Documents/GitHub/web-programming/front-end/src/components/HotelsList/HotelsList.js\",\n  _s = $RefreshSig$();\n// src/components/HotelsList/HotelsList.js\nimport React, { useState, useEffect } from 'react';\nimport HotelCard from './HotelCard/HotelCard';\nimport Filters from '../Filters/Filters';\nimport './HotelsList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HotelsList({\n  searchTerm\n}) {\n  _s();\n  const [hotels, setHotels] = useState([]);\n  const [filters, setFilters] = useState({\n    price: '',\n    visitors: '',\n    rooms: ''\n  });\n  const [loading, setLoading] = useState(true);\n\n  // Завантаження даних із сервера\n  useEffect(() => {\n    const fetchHotels = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:3000/api/hotels');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setHotels(data);\n      } catch (error) {\n        console.error('Error fetching hotels:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHotels();\n  }, []);\n\n  // Обробка зміни фільтрів\n  const handleFilterChange = selectedFilters => {\n    setFilters(selectedFilters);\n  };\n\n  // Застосування фільтрів і пошуку до завантажених даних\n  const filteredHotels = hotels.filter(hotel => {\n    const priceMatch = filters.price ? hotel.price <= Number(filters.price) : true;\n    const visitorsMatch = filters.visitors ? hotel.visitors <= Number(filters.visitors) : true;\n    const roomsMatch = filters.rooms ? hotel.rooms <= Number(filters.rooms) : true;\n    const searchMatch = searchTerm ? hotel.name.toLowerCase().includes(searchTerm.toLowerCase().trim()) : true;\n    return priceMatch && visitorsMatch && roomsMatch && searchMatch;\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filters, {\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hotels-list\",\n      children: filteredHotels.map(hotel => /*#__PURE__*/_jsxDEV(HotelCard, {\n        id: hotel.id,\n        name: hotel.name,\n        visitors: hotel.visitors,\n        rooms: hotel.rooms,\n        image: hotel.image,\n        price: hotel.price,\n        description: hotel.description\n      }, hotel.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(HotelsList, \"gbeZfE4DEWczCoh/WAQTSE24TpM=\");\n_c = HotelsList;\nexport default HotelsList;\nvar _c;\n$RefreshReg$(_c, \"HotelsList\");","map":{"version":3,"names":["React","useState","useEffect","HotelCard","Filters","jsxDEV","_jsxDEV","HotelsList","searchTerm","_s","hotels","setHotels","filters","setFilters","price","visitors","rooms","loading","setLoading","fetchHotels","response","fetch","ok","Error","data","json","error","console","handleFilterChange","selectedFilters","filteredHotels","filter","hotel","priceMatch","Number","visitorsMatch","roomsMatch","searchMatch","name","toLowerCase","includes","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","className","map","id","image","description","_c","$RefreshReg$"],"sources":["/Users/voloda/Documents/GitHub/web-programming/front-end/src/components/HotelsList/HotelsList.js"],"sourcesContent":["// src/components/HotelsList/HotelsList.js\nimport React, { useState, useEffect } from 'react';\nimport HotelCard from './HotelCard/HotelCard';\nimport Filters from '../Filters/Filters';\nimport './HotelsList.css';\n\nfunction HotelsList({ searchTerm }) {\n    const [hotels, setHotels] = useState([]);\n    const [filters, setFilters] = useState({ price: '', visitors: '', rooms: '' });\n    const [loading, setLoading] = useState(true);\n\n    // Завантаження даних із сервера\n    useEffect(() => {\n        const fetchHotels = async () => {\n            setLoading(true);\n            try {\n                const response = await fetch('http://localhost:3000/api/hotels');\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                setHotels(data);\n            } catch (error) {\n                console.error('Error fetching hotels:', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchHotels();\n    }, []);\n\n    // Обробка зміни фільтрів\n    const handleFilterChange = (selectedFilters) => {\n        setFilters(selectedFilters);\n    };\n\n    // Застосування фільтрів і пошуку до завантажених даних\n    const filteredHotels = hotels.filter((hotel) => {\n        const priceMatch = filters.price ? hotel.price <= Number(filters.price) : true;\n        const visitorsMatch = filters.visitors ? hotel.visitors <= Number(filters.visitors) : true;\n        const roomsMatch = filters.rooms ? hotel.rooms <= Number(filters.rooms) : true;\n        const searchMatch = searchTerm \n            ? hotel.name.toLowerCase().includes(searchTerm.toLowerCase().trim()) \n            : true;\n\n        return priceMatch && visitorsMatch && roomsMatch && searchMatch;\n    });\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div>\n            <Filters onFilterChange={handleFilterChange} />\n\n            <div className=\"hotels-list\">\n                {filteredHotels.map((hotel) => (\n                    <HotelCard\n                        key={hotel.id}\n                        id={hotel.id}\n                        name={hotel.name}\n                        visitors={hotel.visitors}\n                        rooms={hotel.rooms}\n                        image={hotel.image}\n                        price={hotel.price}\n                        description={hotel.description}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default HotelsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}